apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-configmap
  labels:
    app: opentelemetry-grafana
    component: grafana
data:
  sources: |
      apiVersion: 1
      datasources:
      - name: Victoria
        type: prometheus
        uid: prometheus
        access: proxy
        orgId: 1
        url: http://victoria:8428/
        basicAuth: false
        isDefault: true
        version: 1
        editable: false
        jsonData:
          httpMethod: GET
      - name: Tempo
        type: tempo
        access: proxy
        orgId: 1
        url: http://tempo:3200
        basicAuth: false
        isDefault: false
        version: 1
        editable: false
        apiVersion: 1
        uid: tempo
        jsonData:
          httpMethod: GET
          serviceMap:
            datasourceUid: prometheus
          nodeGraph:
            enabled: true



---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file ../local-setup/local-dockercompose.yaml convert --profile all
    kompose.version: 1.32.0 (HEAD)
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose --file ../local-setup/local-dockercompose.yaml convert --profile all
        kompose.version: 1.32.0 (HEAD)
      labels:
        io.kompose.network/local-setup-my-network: "true"
        io.kompose.service: grafana
    spec:
      containers:
        - env:
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              value: Admin
            - name: GF_AUTH_DISABLE_LOGIN_FORM
              value: "true"
            - name: GF_FEATURE_TOGGLES_ENABLE
              value: traceqlEditor
          image: grafana/grafana:10.1.1
          name: otel-grafana
          ports:
            - containerPort: 3000
              hostPort: 3000
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/grafana/provisioning/datasources/
              name: grafana-claim0
      restartPolicy: Always
      volumes:
        - name: grafana-claim0
          configMap:
            name: grafana-configmap
            items:
            - key: sources
              path: datasources.yaml
